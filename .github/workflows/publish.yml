name: Publish to PyPI

on:
  release:
    types: [published]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Cache Poetry dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Install dependencies with Poetry
        run: |
          poetry install --with dev

      - name: Run pytest
        run: |
          poetry run pytest

  build:
    name: Build the package
    needs: test
    runs-on: ubuntu-latest
    outputs:
      artifact-name: ${{ steps.upload.outputs.artifact-name }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Poetry
        run: pip install poetry

      - name: Extract version from GitHub Release
        run: |
          VERSION=${{ github.event.release.tag_name }}
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Update pyproject.toml version
        run: poetry version $VERSION

      - name: Install dependencies
        run: poetry install

      - name: Build package
        run: poetry build

      - name: Upload built package
        id: upload
        uses: actions/upload-artifact@v4
        with:
          name: python-package
          path: dist/*

  publish:
    name: Publish to PyPI
    needs: build
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # only used for OIDC Auth
      contents: read

    steps:
      - name: Download built package
        uses: actions/download-artifact@v4
        with:
          name: python-package
          path: dist

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
